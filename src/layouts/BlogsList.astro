---
import { Image } from "astro:assets";
import config from "@/config/config.json";
import dateFormat from "@/lib/utils/dateFormat";
import { humanize, plainify, slugify } from "@/lib/utils/textConverter";
import { IconCalendarMonth, IconCategory } from "@tabler/icons-react";

const { summary_length } = config.settings;
const { blogs } = Astro.props;
---

{
  blogs ? (
    <div class="space-y-6">
      {blogs.map((post: any) => (
        <article class="bg-white rounded-lg paper border-0 overflow-hidden">
          <div class="flex flex-col md:flex-row">
            {post.data.image && (
              <a href={`/blog/${post.slug}`} class="md:w-48 shrink-0">
                <Image
                  src={post.data.image}
                  alt={post.data.title}
                  width={200}
                  height={200}
                  class="w-full h-48 md:h-full object-cover"
                />
              </a>
            )}
            <div class="p-4 flex-1">
              <h3 class="text-xl font-semibold mb-2">
                <a
                  href={`/blog/${post.slug}`}
                  class="hover:text-primary transition-colors duration-300"
                >
                  {post.data.title}
                </a>
              </h3>
              <ul class="flex flex-wrap items-center text-sm text-gray-500 mb-3">
                <li class="flex items-center mr-4">
                  <IconCalendarMonth className="mr-1 h-4 w-4 flex-shrink-0" />
                  {dateFormat(post.data.date)}
                </li>
                <li class="flex items-center">
                  <IconCategory className="mr-1 h-4 w-4 flex-shrink-0" />
                  {post.data.categories.map(
                    (category: string, index: number) => (
                      <span class="mr-1">
                        <a
                          href={`/blog/c/${slugify(category)}`}
                          class="hover:text-primary"
                        >
                          {humanize(category)}
                        </a>
                        {index < post.data.categories.length - 1 && ", "}
                      </span>
                    ),
                  )}
                </li>
              </ul>
              <p class="text-gray-700 text-sm">
                {post.data.description ??
                  plainify(
                    `${post.body?.slice(0, Number(summary_length))} ...`,
                  )}
              </p>
            </div>
          </div>
        </article>
      ))}
    </div>
  ) : (
    <p class="text-center">Keine Blogs gefunden :(</p>
  )
}
