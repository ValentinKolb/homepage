---
import Base from "@/components/astro/Base.astro";
import BlogsList from "@/components/astro/BlogsList.astro";
import { getContentPages } from "@/lib/content/contentParser.astro";
import { getTaxonomy } from "@/lib/content/taxonomyParser.astro";
import { sortByDate } from "@/lib/utils/sorter";
import { humanize, slugify } from "@/lib/utils/text";

export const prerender = true;

const tagFilter = (blogs: any[], name: string, key: any) => {
  return blogs.filter((blog) =>
    blog.data[name]?.map((name: string) => slugify(name)).includes(key),
  );
};

export async function getStaticPaths() {
  const tags = await getTaxonomy("blogs", "tags");

  return tags.map((tag) => {
    return {
      params: { tag },
    };
  });
}

const { tag } = Astro.params;

const blogs = await getContentPages("blogs");
const filteredByTags = tagFilter(blogs, "tags", tag);
const sortedBlogs = sortByDate(filteredByTags);

const title = humanize(tag || "");
---

<Base title={title || "Tag"}>
  <div class="section">
    <div class="container">
      <p class="text-center text-2xl mb-4">Blogs mit dem Tag</p>
      <h1 class="h2 mb-16 text-center text-primary">{title}</h1>
      <BlogsList blogs={sortedBlogs} />
    </div>
  </div>
</Base>
