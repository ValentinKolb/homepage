---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Base from "@/components/layout/Base.astro";
import { slugify } from "@/lib/utils/textConverter";
import fs from 'node:fs/promises';
import path from 'node:path';

// Get gallery collections from markdown files
const galleries = await getCollection("gallery");

// Function to get the first image from each gallery folder
async function getPreviewImages() {
  // Define explicit type with index signature
  const previewImages: Record<string, string> = {};

  for (const gallery of galleries) {
    const publicPath = gallery.data.folderPath;
    const systemPath = path.join(process.cwd(), "public", gallery.data.folderPath.replace(/^\//, ""));

    try {
      const files = await fs.readdir(systemPath);
      const imageFiles = files.filter(file => file.endsWith('.jpg'));

      if (imageFiles.length > 0) {
        previewImages[gallery.id] = `${publicPath}/${imageFiles[0]}`;
      }
    } catch (error) {
      console.error(`Error reading gallery folder ${systemPath}:`, error);
    }
  }

  return previewImages;
}

const galleryPreviews = await getPreviewImages();
---

<Base title="Galerie">
  <section class="py-16">
    <div class="container mx-auto">
      <h1 class="text-3xl font-bold mb-8">Galerie</h1>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
        {
          galleries.map((gallery) => (
            <a
              href={`/gallery/${slugify(gallery.data.name)}`}
              class="block group"
            >
              <div class="aspect-w-4 aspect-h-3 bg-gray-200 rounded-lg overflow-hidden">
                <Image
                  src={galleryPreviews[gallery.id]}
                  width={400}
                  height={300}
                  alt={gallery.data.name}
                  class="object-cover w-full h-full group-hover:scale-[1.02] transition-transform duration-300"
                />
              </div>
              <h2 class="mt-4 text-xl font-semibold group-hover:text-primary transition-colors">
                {gallery.data.name}
              </h2>
              {gallery.data.description && (
                <p class="text-gray-600">{gallery.data.description}</p>
              )}
            </a>
          ))
        }
      </div>
    </div>
  </section>
</Base>
