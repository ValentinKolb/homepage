---
import { ClientRouter } from "astro:transitions";
import Base from "@/components/astro/Base.astro";
import PadView from "@/features/pad/pad-editor";
import { nanoid } from "nanoid";
import { actions } from "astro:actions";

let { padId } = Astro.params as { padId: string };

// only allow "good" ids
if ((!padId || padId.length < 21) && padId !== "howto") {
  return Astro.redirect(`/tools/pad/${nanoid(21)}`);
}

let username: string | undefined;
const userId = Astro.locals.auth?.userId;
if (userId) {
  const { data: user } = await Astro.callAction(actions.auth.user.get, {
    userId: userId as string,
  });
  username = user?.username;
}

const menu = {
  nav: [
    {
      name: "Alle Pads",
      url: `/tools/pad`,
    },
  ],
  tools: [],
};
---

<ClientRouter />
<Base title={"Pad"} fixedPage={true} menuOverwrites={menu} transition:persist>
  <PadView urlParam={padId} username={username} client:only />
</Base>
